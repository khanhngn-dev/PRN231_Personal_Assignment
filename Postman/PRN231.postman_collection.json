{
	"info": {
		"_postman_id": "01819d41-479b-4c4e-96a7-e038a8430812",
		"name": "PRN231",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20350261"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login (Failed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login with invalid credentials\", () => {\r",
									"    pm.expect(pm.response.code).eq(401);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"staff\",\r\n    \"password\": \"this_password_is_incorrect\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/auth/login",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Admin (Success)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login as Admin successfully\", () => {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"})\r",
									"const token = pm.response.text();\r",
									"pm.collectionVariables.set(\"bearer\", token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/auth/login",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Staff (Success)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login as Staff successfully\", () => {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"})\r",
									"const token = pm.response.text();\r",
									"pm.collectionVariables.set(\"bearer\", token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"staff\",\r\n    \"password\": \"staff@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/auth/login",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Students",
			"item": [
				{
					"name": "Get students list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get students list with pagination\", () => {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"    const res = pm.response.json();\r",
									"    pm.expect(res).has.property(\"items\");\r",
									"    pm.expect(res.items).instanceOf(Array);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/students/?pageIndex=1&pageSize=5&minBirthYear=&maxBirthYear=1999",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"students",
								""
							],
							"query": [
								{
									"key": "pageIndex",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "5"
								},
								{
									"key": "minBirthYear",
									"value": ""
								},
								{
									"key": "maxBirthYear",
									"value": "1999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a student by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get a student with ID\", () => {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"    const res = pm.response.json();\r",
									"    pm.expect(res).has.property(\"id\");\r",
									"    pm.expect(res.id).eq(1);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/students/1",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"students",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a student",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create a student\", () => {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"    const res = pm.response.json();\r",
									"    pm.expect(res).has.property(\"email\");\r",
									"    pm.expect(res.email).eq(\"a.ng@gmai.com\");\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"Nguyen Van A\",\r\n    \"email\": \"a.ng@gmail.com\",\r\n    \"groupId\": 1,\r\n    \"dateOfBirth\": \"2002-02-19\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/students/",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"students",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a student",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update a student\", () => {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"    const res = pm.response.json();\r",
									"    pm.expect(res).has.property(\"fullName\");\r",
									"    pm.expect(res.fullName).eq(\"A New Name\");\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fullName\": \"A New Name\",\r\n    \"email\": \"a.ng@gmailcom\",\r\n    \"groupId\": 1,\r\n    \"dateOfBirth\": \"2002-02-19\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/students/15",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"students",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a student by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete a student with ID\", () => {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/students/14",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"students",
								"14"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endpoint",
			"value": "https://localhost:7009/api",
			"type": "string"
		},
		{
			"key": "bearer",
			"value": ""
		}
	]
}